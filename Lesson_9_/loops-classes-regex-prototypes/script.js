console.log("1a: –ù–µ–ø–∞—Ä–Ω—ñ —á–∏—Å–ª–∞ –≤—ñ–¥ 1 –¥–æ 19");
for (let i = 1; i <= 19; i++) {
  if (i % 2 !== 0) {
    console.log(i);
  }
}

console.log("1b: –°—É–º–∞ –≤—ñ–¥ 1 –¥–æ 10");
let sum = 0;
let j = 1;
while (j <= 10) {
  sum += j;
  j++;
}
console.log("–°—É–º–∞ =", sum);

console.log("1c: –ú–∞—Å–∏–≤ –∑ —ñ–Ω–¥–µ–∫—Å–∞–º–∏");
const items = ["üçé", "üçå", "üçá", "üçì"];
for (let index in items) {
  console.log(`${index}: ${items[index]}`);
}

class Rectangle {
  constructor(width, height) {
    this.width = width;
    this.height = height;
  }

  getArea() {
    return this.width * this.height;
  }

  getPerimeter() {
    return 2 * (this.width + this.height);
  }
}

console.log("2: –ü—Ä—è–º–æ–∫—É—Ç–Ω–∏–∫–∏");
const rect1 = new Rectangle(5, 10);
const rect2 = new Rectangle(7, 3);

console.log(
  `rect1 -> –ü–ª–æ—â–∞: ${rect1.getArea()}, –ü–µ—Ä–∏–º–µ—Ç—Ä: ${rect1.getPerimeter()}`
);
console.log(
  `rect2 -> –ü–ª–æ—â–∞: ${rect2.getArea()}, –ü–µ—Ä–∏–º–µ—Ç—Ä: ${rect2.getPerimeter()}`
);

function validateEmail(email) {
  const regex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
  return regex.test(email);
}
console.log("3a: –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ email");
console.log("test@example.com ->", validateEmail("test@example.com"));
console.log("bademail@ ->", validateEmail("bademail@"));

const numbers = ["010-1234-5678", "1234-5678", "+380501234567", "050-123-4567"];
const phoneRegex = /^\d{3}-\d{4}-\d{4}$/;
const validPhones = numbers.filter((num) => phoneRegex.test(num));
console.log("3b: –£–∫—Ä–∞—ó–Ω—Å—å–∫—ñ —Ç–µ–ª–µ—Ñ–æ–Ω–∏ —É —Ñ–æ—Ä–º–∞—Ç—ñ XXX-XXXX-XXXX");
console.log(validPhones);

function Person(name, age) {
  this.name = name;
  this.age = age;
}

Person.prototype.introduce = function () {
  return `–ü—Ä–∏–≤—ñ—Ç, —è ${this.name}, –º–µ–Ω—ñ ${this.age} —Ä–æ–∫—ñ–≤.`;
};

Person.prototype.haveBirthday = function () {
  this.age++;
};

console.log("4: –ü—Ä–æ—Ç–æ—Ç–∏–ø–∏");
const p1 = new Person("–û–ª–µ–≥", 20);
const p2 = new Person("–ú–∞—Ä—ñ—è", 25);

console.log(p1.introduce());
console.log(p2.introduce());

p1.haveBirthday();
console.log("–ü—ñ—Å–ª—è –¥–Ω—è –Ω–∞—Ä–æ–¥–∂–µ–Ω–Ω—è:", p1.introduce());
